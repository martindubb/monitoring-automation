---
- name: Update all packages
  ansible.builtin.apt:
    name: "*"
    state: latest

- name: create download directory
  ansible.builtin.file:
    path: "{{ download_path }}/prometheus"
    state: directory

- name: download prometheus archive
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "{{ download_path }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"

- name: unpack prometheus archive
  ansible.builtin.unarchive:
    src: "{{ download_path }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "{{ download_path }}/prometheus"
    remote_src: yes

- name: move prometheus files
  ansible.builtin.copy:
    src: "{{ download_path }}/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/"
    dest: "{{ destination_path }}/prometheus/"
    remote_src: yes
  notify: restart prometheus service

- name: template config file
  ansible.builtin.template:
    src: "templates/prometheus.yml"
    dest: "{{ destination_path }}/prometheus/prometheus.yml"
  notify: restart prometheus service

- name: copy rules files
  ansible.builtin.copy:
    src: "files/{{ item }}"
    dest: "{{ destination_path }}/prometheus/{{ item }}"
  with_items: 
  - my-rules.yml
  - node_exporter.rules.yml
  notify: restart prometheus service

- name: create service file
  ansible.builtin.copy:
    dest: "/etc/systemd/system/prometheus.service"
    content: |
      [Unit]
      Description=Prometheus Service
      After=network.target

      [Service]
      Type=simple
      ExecStart={{ destination_path }}/prometheus --config.file={{ destination_path }}/prometheus.yml

      [Install]
      WantedBy=multi-user.target
  notify: restart prometheus service

- name: start prometheus service
  ansible.builtin.systemd:
    name: prometheus
    state: started
